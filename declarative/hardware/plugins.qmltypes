import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.hawaiios.hardware 0.1'

Module {
    Component {
        name: "Battery"
        prototype: "QObject"
        exports: ["org.hawaiios.hardware/Battery 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "UnknownBattery": 0,
                "PdaBattery": 1,
                "UpsBattery": 2,
                "PrimaryBattery": 3,
                "MouseBattery": 4,
                "KeyboardBattery": 5,
                "KeyboardMouseBattery": 6,
                "CameraBattery": 7,
                "PhoneBattery": 8,
                "MonitorBattery": 9
            }
        }
        Enum {
            name: "Technology"
            values: {
                "UnknownTechnology": 0,
                "LithiumIon": 1,
                "LithiumPolymer": 2,
                "LithiumIronPhosphate": 3,
                "LeadAcid": 4,
                "NickelCadmium": 5,
                "NickelMetalHydride": 6
            }
        }
        Enum {
            name: "ChargeState"
            values: {
                "Stable": 0,
                "Charging": 1,
                "Discharging": 2,
                "FullyCharged": 3
            }
        }
        Property { name: "udi"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "iconName"; type: "string"; isReadonly: true }
        Property { name: "type"; type: "Type"; isReadonly: true }
        Property { name: "technology"; type: "Technology"; isReadonly: true }
        Property { name: "chargePercent"; type: "int"; isReadonly: true }
        Property { name: "capacity"; type: "int"; isReadonly: true }
        Property { name: "rechargeable"; type: "bool"; isReadonly: true }
        Property { name: "powerSupply"; type: "bool"; isReadonly: true }
        Property { name: "chargeState"; type: "ChargeState"; isReadonly: true }
        Property { name: "timeToEmpty"; type: "qlonglong"; isReadonly: true }
        Property { name: "timeToFull"; type: "qlonglong"; isReadonly: true }
        Property { name: "energy"; type: "double"; isReadonly: true }
        Property { name: "energyRate"; type: "double"; isReadonly: true }
        Property { name: "voltage"; type: "double"; isReadonly: true }
        Property { name: "temperature"; type: "double"; isReadonly: true }
        Property { name: "recalled"; type: "bool"; isReadonly: true }
        Property { name: "recallVendor"; type: "string"; isReadonly: true }
        Property { name: "recallUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "serial"; type: "string"; isReadonly: true }
    }
    Component {
        name: "HardwareEngine"
        prototype: "QObject"
        exports: ["org.hawaiios.hardware/Hardware 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "batteries"; type: "Battery"; isList: true; isReadonly: true }
        Property { name: "storageDevices"; type: "StorageDevice"; isList: true; isReadonly: true }
        Signal {
            name: "storageDeviceAdded"
            Parameter { name: "device"; type: "StorageDevice"; isPointer: true }
        }
        Signal {
            name: "storageDeviceRemoved"
            Parameter { name: "device"; type: "StorageDevice"; isPointer: true }
        }
        Signal {
            name: "batteryAdded"
            Parameter { name: "battery"; type: "Battery"; isPointer: true }
        }
        Signal {
            name: "batteryRemoved"
            Parameter { name: "battery"; type: "Battery"; isPointer: true }
        }
    }
    Component {
        name: "StorageDevice"
        prototype: "QObject"
        exports: ["org.hawaiios.hardware/StorageDevice 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "udi"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "iconName"; type: "string"; isReadonly: true }
        Property { name: "mounted"; type: "bool"; isReadonly: true }
        Method { name: "mount" }
        Method { name: "unmount" }
    }
}
